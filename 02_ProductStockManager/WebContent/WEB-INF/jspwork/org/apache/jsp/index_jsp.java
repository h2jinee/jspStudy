/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-11-27 06:17:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import product.model.service.*;
import product.model.vo.*;
import product.model.exception.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("product.model.vo");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("product.model.exception");
    _jspx_imports_packages.add("product.model.service");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	/****** Controller ******/
	ProductService productService = new ProductService();
	List<Product> list = productService.selectProductList();
	//System.out.println("list@jsp="+list);
	//list.clear();
	List<ProductIO> ioList = productService.selectProductIOList();
	//System.out.println("ioList@jsp="+ioList);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품 재고 관리</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery-3.4.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t//console.log(\"jquery load 완료!!!\");\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btn-add\").click(function(){\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath() );
      out.write("/jsp/product/productForm.jsp\";\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"table tr\").click(function(){\r\n");
      out.write("\t\t//사용자속성 productId값 가져오기\r\n");
      out.write("\t\tvar productId = $(this).attr(\"productId\");\r\n");
      out.write("\t\tconsole.log(productId);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//테이블 헤어 row를 클릭한 경우\r\n");
      out.write("\t\tif(productId == undefined) return;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/jsp/product/productView.jsp?productId=\"+productId;\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("button#btn-add{\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tmargin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("hr{\r\n");
      out.write("\tclear: both;\r\n");
      out.write("}\r\n");
      out.write("div#container {\r\n");
      out.write("\t/* border:1px solid black; */\r\n");
      out.write("\twidth:1000px; \r\n");
      out.write("\tmargin:auto; \r\n");
      out.write("\tpadding:50px; \r\n");
      out.write("\ttext-align:center; \r\n");
      out.write("}\r\n");
      out.write("section{\r\n");
      out.write("\t/*display:inline-block;*/ /* inline-block하면 요소가 높낮이가 달라짐 */\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("}\r\n");
      out.write("section#tbl-container{\r\n");
      out.write("\t/* border:1px solid black; */\r\n");
      out.write("\twidth:500px; \r\n");
      out.write("\ttext-align: center; \r\n");
      out.write("\tpadding: 0 50px 50px\r\n");
      out.write("}\r\n");
      out.write("section#tbl-container table{\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("\tborder-collapse:collapse;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("section#tbl-container table th, section#tbl-container table td {\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("}\r\n");
      out.write("section#tbl-container table tr:hover td{\r\n");
      out.write("\tbackground: lightgray;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("section#srch-container{\r\n");
      out.write("\t/* border:1px solid black; */\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\ttext-align:left;\r\n");
      out.write("\tpadding:30px 30px 100px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("\t<h2>상품재고관리 시스템</h2>\r\n");
      out.write("\t<section id=\"tbl-container\">\r\n");
      out.write("\t\t<h3>상품현황</h3>\r\n");
      out.write("\t\t<table id=\"product\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>상품아이디</th>\r\n");
      out.write("\t\t\t\t\t<th>상품명</th>\r\n");
      out.write("\t\t\t\t\t<th>가격</th>\r\n");
      out.write("\t\t\t\t\t<th>재고량</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t");

				if(!list.isEmpty()){
					for(int i=0; i<list.size(); i++){
						Product p = list.get(i);
						//System.out.println(p);
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr productId=\"");
      out.print(p.getProductId() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(p.getProductId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(p.getProductName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(p.getPrice() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(p.getStock() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      }
				}
				else{
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"4\">상품이 존재하지 않습니다.</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			
				}
			
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<button id=\"btn-add\">상품추가</button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\t\t<h3>상품입출고현황</h3>\r\n");
      out.write("\t\t<table id=\"io\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>입출고번호</th>\r\n");
      out.write("\t\t\t\t\t<th>상품아이디</th>\r\n");
      out.write("\t\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t\t<th>수량</th>\r\n");
      out.write("\t\t\t\t\t<th>입/출고</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t");

				if(!ioList.isEmpty()){
					for(int i=0; i<ioList.size(); i++){
					ProductIO pio = ioList.get(i);			
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr productId=\"");
      out.print(pio.getProductId() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(pio.getIoNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(pio.getProductId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(pio.getIoDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(pio.getAmount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(("I".equals(pio.getStatus())? "입고" : "출고") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

					}
				}
				else{
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"5\">입출고 내역이 없습니다.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<section id=\"srch-container\">\r\n");
      out.write("\t\t<form name=\"srchFrm\" action=\"");
      out.print(request.getContextPath());
      out.write("/jsp/product/productFinder.jsp\">\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"srchType\" id=\"productId\" value=\"productId\" checked/><label for=\"productId\">상품아이디</label>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"srchType\" id=\"productName\" value=\"productName\" /><label for=\"productName\">상품명</label>\r\n");
      out.write("\t\t\t<br /><br />\r\n");
      out.write("\t\t\t<input type=\"search\" name=\"srchKeyword\" id=\"srchKeyword\" size=25 placeholder=\"검색할 아이디를 입력하세요.\"/>\r\n");
      out.write("\t\t\t<br /><br />\r\n");
      out.write("\t\t\t<input type=\"submit\" onclick=\"return srchValidate();\" value=\"검색\" />\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</section>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
