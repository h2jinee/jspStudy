/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-11-27 05:38:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class productForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/jsp/common/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품 추가페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write("div#container {\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("\twidth:80%; \r\n");
      out.write("\tmargin:auto; \r\n");
      out.write("\tpadding:50px; \r\n");
      out.write("\ttext-align:center; \r\n");
      out.write("}\r\n");
      out.write("table#product{\r\n");
      out.write("\t/* border:1px solid black; */\r\n");
      out.write("\tborder-collapse:collapse;\r\n");
      out.write("\twidth: 355px;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("table#product td {\r\n");
      out.write("\t/* border:1px solid black; */\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("}\r\n");
      out.write("/* 첫번째컬럼너비 */\r\n");
      out.write("table#product tr td:first-of-type{\r\n");
      out.write("    text-align:right;\r\n");
      out.write("    width:30%;\r\n");
      out.write("}\r\n");
      out.write("/* 두번째컬럼 좌측정렬 */\r\n");
      out.write("table#product tr td:last-of-type{\r\n");
      out.write("    text-align:left;\r\n");
      out.write("}\r\n");
      out.write("/* 마지막버튼행 정렬 */\r\n");
      out.write("table#product tr:last-of-type td{\r\n");
      out.write("    text-align:center;\r\n");
      out.write("}\r\n");
      out.write("#to-main{\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("}\r\n");
      out.write("#to-main img{\r\n");
      out.write("\twidth: 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t<a href=\"");
      out.print(request.getContextPath());
      out.write("\" id=\"to-main\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/home.png\" /></a>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<h2>상품재고관리 시스템 - 상품추가</h2>\r\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/jsp/product/productInsert.jsp\"\r\n");
      out.write("\t\t  method=\"POST\">\r\n");
      out.write("\t\t<table id=\"product\">\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>상품아이디 : </td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"productId\" id=\"productId\" required/></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>상품명 :</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"productName\" id=\"productName\" required/></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>가격 :</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"number\" name=\"price\" id=\"price\" step=1000 required/></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>재고 :</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"number\" name=\"stock\" id=\"stock\" value=\"0\" required/></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>상품설명 :</td>\r\n");
      out.write("\t\t\t\t\t<td><textarea name=\"desc\" id=\"desc\" cols=30 rows=3></textarea></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"상품추가\" />&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"reset\" value=\"초기화\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
